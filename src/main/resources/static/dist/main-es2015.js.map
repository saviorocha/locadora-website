{"version":3,"sources":["./src/app/components/instancia-filme/instancia-filme.service.ts","./src/app/views/filme-crud/filme-crud.component.ts","./src/app/views/filme-crud/filme-crud.component.html","./src/app/components/instancia-filme/instancia-filme-read/instancia-filme-read.component.ts","./src/app/components/instancia-filme/instancia-filme-read/instancia-filme-read.component.html","./src/environments/environment.ts","./src/app/components/instancia-filme/instancia-filme-create/instancia-filme-create.component.ts","./src/app/components/instancia-filme/instancia-filme-create/instancia-filme-create.component.html","./src/app/components/instancia-filme/instancia-filme-delete/instancia-filme-delete.component.ts","./src/app/components/instancia-filme/instancia-filme-delete/instancia-filme-delete.component.html","./src/app/components/template/footer/footer.component.ts","./src/app/components/template/footer/footer.component.html","./src/app/views/instancia-filme-crud/instancia-filme-crud.component.ts","./src/app/views/instancia-filme-crud/instancia-filme-crud.component.html","./src/app/views/home/home.component.ts","./src/app/views/home/home.component.html","./src/app/components/instancia-filme/instancia-filme-update/instancia-filme-update.component.ts","./src/app/components/instancia-filme/instancia-filme-update/instancia-filme-update.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/filme/filme-desc/filme-desc.component.ts","./src/app/components/filme/filme-desc/filme-desc.component.html","./src/app/components/filme/filme.service.ts","./src/app/components/filme/filme-delete/filme-delete.component.ts","./src/app/components/filme/filme-delete/filme-delete.component.html","./src/app/components/template/header/header.service.ts","./src/app/app.module.ts","./src/app/components/filme/filme-update/filme-update.component.ts","./src/app/components/filme/filme-update/filme-update.component.html","./src/app/components/instancia-filme/instancia-filme-read-detail/instancia-filme-read-detail.component.ts","./src/app/components/instancia-filme/instancia-filme-read-detail/instancia-filme-read-detail.component.html","./src/app/components/template/nav/nav.component.ts","./src/app/components/template/nav/nav.component.html","./src/app/components/filme/filme-create/filme-create.component.ts","./src/app/components/filme/filme-create/filme-create.component.html","./src/app/components/template/header/header.component.ts","./src/app/components/template/header/header.component.html","./src/app/app-routing.module.ts","./src/app/components/filme/filme-read/filme-read.component.ts","./src/app/components/filme/filme-read/filme-read.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n// import { type } from 'os';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Instancia } from './instancia-filme.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class  InstanciaFilmeService {\n\n  baseUrl = \"http://localhost:8080/instancias\";\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private http: HttpClient\n  ) { }\n\n  showMessage(msg: string, isError = false): void {\n    \n    this.snackBar.open(msg, \"Fechar\", {\n      duration: 3000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"top\"\n    });\n  }\n\n  create(instancia: Instancia): Observable<Instancia> {\n    return this.http.post<Instancia> (this.baseUrl, instancia).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  read(): Observable<Instancia[]> {\n    return this.http.get<any[]>(this.baseUrl).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  readById(id: string): Observable<Instancia> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.get<Instancia>(url).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  update(instancia: Instancia): Observable<Instancia> {\n    const url = `${this.baseUrl}/${instancia.id}`;\n    return this.http.put<Instancia>(url, instancia).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  deleteById(instancia: Instancia): Observable<Instancia> {\n    const url = `${this.baseUrl}/${instancia.id}`;\n    return this.http.delete<Instancia>(url).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n\n  errorHandler(e: any): Observable<any> {\n    console.log(e);\n    this.showMessage('Algo deu errado :\\\\', true);\n    return EMPTY;\n  }\n\n  stringToDate(dateStr: string): Date {\n    dateStr = dateStr.slice(0,10);\n    let year = dateStr.split(\"-\")[0],\n        month = dateStr.split(\"-\")[1],\n        day = dateStr.split(\"-\")[2];\n    let date: Date = new Date(Number(year), Number(month), Number(day)); \n    return date;\n  }\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HeaderService } from 'src/app/components/template/header/header.service';\n\n@Component({\n  selector: 'app-filme-crud',\n  templateUrl: './filme-crud.component.html',\n  styleUrls: ['./filme-crud.component.css']\n})\nexport class FilmeCrudComponent implements OnInit {\n\n  constructor(\n    private router: Router, \n    private headerService: HeaderService,\n    private elRef: ElementRef\n  ) {\n    headerService.headerData = {\n      title: \"Filmes\",\n      icon: \"movie\",\n      routeUrl: \"/filme\"\n    }\n  }\n\n  ngOnInit(): void {\n    this.domTeste();\n  }\n\n  irParaFilmeCreate(): void {\n    this.router.navigate(['/filme/create']);\n  }\n\n  domTeste() {\n    let elsTag = this.elRef.nativeElement.getElementsByTagName(\"td\");\n  }\n\n}\n","<button mat-raised-button (click)=\"irParaFilmeCreate()\" color=\"primary\">\n    Novo filme\n</button>\n<app-filme-read></app-filme-read>","import { Component, OnInit } from '@angular/core';\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/pt';\nimport { Instancia } from '../instancia-filme.model';\nimport { InstanciaFilmeService } from '../instancia-filme.service';\nimport { FilmeCrudComponent } from 'src/app/views/filme-crud/filme-crud.component';\nimport { Filme } from '../../filme/filme.model';\nimport { FilmeService } from '../../filme/filme.service';\n\n@Component({\n  selector: 'app-instancia-filme-read',\n  templateUrl: './instancia-filme-read.component.html',\n  styleUrls: ['./instancia-filme-read.component.css']\n})\nexport class InstanciaFilmeReadComponent implements OnInit {\n\n  instancias: Instancia[];\n  // filme: Filme;\n  displayedColumns = ['id', 'data_entrega', 'filme', 'action'];\n\n  constructor(\n    private instanciaService: InstanciaFilmeService\n  ) { }\n\n  ngOnInit(): void {\n    registerLocaleData(localeFr, 'br'); \n    this.instanciaService.read().subscribe(instancias => {\n      this.instancias = instancias;\n      // console.log(\"instancias: \", this.instancias);\n      // this.formatDate();\n    })\n  }\n\n}\n","<div class=\"mat-elevation-z4\">\n    <table matSort mat-table [dataSource]=\"instancias\">\n        <!-- *ngIf=\"filmes.length !== 0; else elseBlock\" -->\n        <!-- Id Column -->\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n            <td mat-cell *matCellDef=\"let row\"><a routerLink=\"/instancia/read/{{ row.id }}\">{{ row.id }}</a></td> <!-- routerLink=\"/instancias/read/{{ row.id }}\" -->\n        </ng-container>\n\n        <ng-container matColumnDef=\"data_entrega\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Data de entrega</th>\n            <td mat-cell *matCellDef=\"let row\"><a >{{ row.data_entrega | date: 'longDate':'UTC':'br' }}</a></td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"filme\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Filme</th>\n            <td mat-cell *matCellDef=\"let row\"><a >{{ row.filme.titulo }}</a></td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef>Ação</th>\n            <td mat-cell *matCellDef=\"let row\">\n                <a routerLink=\"/instancia/update/{{ row.id }}\" class=\"edit\">\n                    <i class=\"material-icons\">edit</i>\n                </a>\n                <a routerLink=\"/instancia/delete/{{ row.id }}\" class=\"delete\">\n                    <i class=\"material-icons\">delete</i>\n                </a>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <!-- <mat-paginator #paginator [length]=\"instancias.length\" [pageIndex]=\"0\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 50]\">\n    </mat-paginator> -->\n    <!-- <ng-template #elseBlock>\n        <p>Parece que estamos sem filmes</p>\n        <img src=\"../../../../assets/img/empty-filme-read.jpeg\" alt=\"shrug\">\n    </ng-template> -->\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Filme } from '../../filme/filme.model';\nimport { FilmeService } from '../../filme/filme.service';\nimport { Instancia } from '../instancia-filme.model';\nimport { InstanciaFilmeService } from '../instancia-filme.service';\n\n@Component({\n  selector: 'app-instancia-filme-create',\n  templateUrl: './instancia-filme-create.component.html',\n  styleUrls: ['./instancia-filme-create.component.css']\n})\nexport class InstanciaFilmeCreateComponent implements OnInit {\n\n  filmes: Filme[];\n  selectedFilme: Filme;\n  instancia: Instancia = {\n    // id: 101,\n    // data_entrega: new Date(2020, 10, 17)\n    data_entrega: null,\n    filme: null\n  };\n\n  constructor(\n    private instanciaService: InstanciaFilmeService,\n    private filmeService: FilmeService,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.filmeService.read().subscribe(filmes => {\n      this.filmes = filmes;\n      // console.log(\"create - filme: \", this.filmes);\n    });\n  }\n\n  createInstanciaFilmeForm: FormGroup = this.formBuilder.group({\n    data_entrega: [, {\n      validators: [\n        Validators.required\n      ],\n      updateOn: \"change\"\n    }],\n    filme_select: [, {\n      validators: [\n        Validators.required\n      ],\n      updateOn: \"change\"\n    }],\n  });\n  //  = this.formBuilder.group({\n  //   name: '',\n  //   entregaRange: this.formBuilder.group({\n  //     startDate: '',\n  //     endDate: ''\n  //   })\n  // });\n\n  createInstancia(): void {\n    this.instancia.filme = this.selectedFilme;\n    this.instanciaService.create(this.instancia).subscribe(() => {\n      // console.log(\"create - instancia: \", this.instancia);\n      this.instanciaService.showMessage(\"Instância criada\");\n      this.router.navigate(['/instancia']);\n    });\n  }\n\n  cancel(): void {\n    this.router.navigate(['/instancia']);\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Nova instância</mat-card-title>\n\n    <form [formGroup]=\"createInstanciaFilmeForm\" (submit)=\"createInstancia()\">\n        <mat-form-field>\n            <!-- <mat-label>Choose Date Range</mat-label>\n            <mat-date-range-input [rangePicker]=\"entregaRangePicker\" formGroupName=\"createInstanciaFilmeForm\">\n                <input matStartDate formControlName=\"startDate\" placeholder=\"Start date\">\n                <input matEndDate formControlName=\"endDate\" placeholder=\"End date\">\n            </mat-date-range-input>\n            <mat-datepicker-toggle matSuffix [for]=\"entregaRangePicker\"></mat-datepicker-toggle>\n            <mat-date-range-picker #entregaRangePicker></mat-date-range-picker>\n            <mat-error *ngIf=\"createInstanciaFilmeForm.get('entregaRange').get('startDate').hasError('matStartDateInvalid')\">\n                Invalid start date\n            </mat-error>\n            <mat-error *ngIf=\"createInstanciaFilmeForm.get('entregaRange').get('endDate').hasError('matEndDateInvalid')\">\n                Invalid end date\n            </mat-error>     -->\n            <!-- <input matInput type=\"date\" placeholder=\"Data de entrega\" [(ngModel)]=\"instancia.data_entrega\" name=\"data\"\n                formControlName=\"data_entrega\">\n             -->\n            <input \n                type=\"date\" placeholder=\"Data de entrega\" name=\"data_entrega\"\n                [ngModel]=\"instancia.data_entrega | date:'yyyy-MM-dd'\" (ngModelChange)=\"instancia.data_entrega=$event\"   \n                matInput formControlName=\"data_entrega\"\n            >\n            <mat-error *ngIf=\"createInstanciaFilmeForm.get('data_entrega').hasError('required')\">\n                Campo data de entrega é <strong>obrigatório</strong>\n            </mat-error>\n        </mat-form-field>\n        <!-- <br> -->\n        <mat-form-field>\n            <mat-select [(ngModel)]=\"selectedFilme\" placeholder=\"Escolha o filme\" name=\"filme_select\" formControlName=\"filme_select\">\n                <mat-option *ngFor=\"let filme of filmes\" [value]=\"filme\">\n                    {{ filme.titulo }}\n                </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"createInstanciaFilmeForm.get('filme_select').hasError('required')\">\n                Campo filme é <strong>obrigatório</strong>\n            </mat-error>\n        </mat-form-field>\n    </form>\n</mat-card>\n<button type=\"submit\" mat-raised-button (click)=\"createInstancia()\" color=\"primary\"\n    [disabled]=\"!createInstanciaFilmeForm.valid\">\n    Criar Instância\n</button>\n<button mat-raised-button (click)=\"cancel()\">\n    Cancelar\n</button> ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { Instancia } from '../instancia-filme.model';\nimport { InstanciaFilmeService } from '../instancia-filme.service';\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/pt';\n\n@Component({\n  selector: 'app-instancia-filme-delete',\n  templateUrl: './instancia-filme-delete.component.html',\n  styleUrls: ['./instancia-filme-delete.component.css']\n})\nexport class InstanciaFilmeDeleteComponent implements OnInit {\n\n  instancia: Instancia;\n\n  constructor(\n    private instanciaService: InstanciaFilmeService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    registerLocaleData(localeFr, 'br');\n    const id = this.route.snapshot.paramMap.get('id');\n    this.instanciaService.readById(id).subscribe(instancia => {\n      this.instancia = instancia;\n      // console.log(\"delete: \", this.instancia)\n    });\n  }\n\n  deleteInstancia(): void {\n    this.instanciaService.deleteById(this.instancia).subscribe(() => {\n      this.instanciaService.showMessage('Instância deletada com sucesso!');\n      this.router.navigate(['/instancia']);\n    });\n  }\n\n  avisoMsg(): void {\n    Swal.fire({\n      title: 'Tem certeza de que deseja remover esta instância?',\n      text: 'Você não poderá recuperá-la.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Sim',\n      cancelButtonText: 'Não',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.deleteInstancia();\n      } else if (result.isDismissed) {\n        this.cancel()\n      }\n    });\n  }\n\n  cancel(): void {\n    this.router.navigate(['/instancia']);\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Remover instância</mat-card-title>\n    <form>\n        <mat-form-field>\n            <input type=\"text\" value=\"{{ instancia.data_entrega | date: 'longDate':'UTC':'br' }}\" name=\"data_entrega\" disabled matInput>\n                <!-- [ngModel]=\"instancia.data_entrega | date: 'yyyy-MM-dd'\" matInput> -->\n        </mat-form-field>\n        <br>\n        <mat-form-field>\n            <input type=\"text\" value=\"{{ instancia.filme.titulo }}\" disabled name=\"filme\" matInput>\n        </mat-form-field>\n    </form>\n    <button mat-raised-button (click)=\"avisoMsg()\" color=\"primary\">\n        Remover\n    </button>\n\n    <button mat-raised-button (click)=\"cancel()\">\n        Cancelar\n    </button>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n        Feito por Sávio\n    </span>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { HeaderService } from 'src/app/components/template/header/header.service';\n\n@Component({\n  selector: 'app-instancia-filme-crud',\n  templateUrl: './instancia-filme-crud.component.html',\n  styleUrls: ['./instancia-filme-crud.component.css']\n})\nexport class InstanciaFilmeCrudComponent implements OnInit {\n\n  constructor(\n    private headerService: HeaderService,\n  ) { \n    headerService.headerData = {\n      title: \"Alugar\",\n      icon: \"local_movies\",\n      routeUrl: \"/instancia\"\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button mat-raised-button color=\"primary\" routerLink=\"/instancia/create\">\n    Adicionar instância\n</button>\n\n<app-instancia-filme-read></app-instancia-filme-read>\n","import { Component, OnInit } from '@angular/core';\nimport { HeaderService } from 'src/app/components/template/header/header.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private headerService: HeaderService) {\n    headerService.headerData = {\n      title: \"Início\",\n      icon: \"home\",\n      routeUrl: \"\"\n    }\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main\">\n    <mat-card class=\"main home purple-bg mat-elevation-z3\">\n        <mat-card-title class=\"title\">Bem vindo!</mat-card-title>\n        <mat-card-subtitle class=\"purple-bg subtitle\">\n            O que gostaria de fazer?\n        </mat-card-subtitle>\n    </mat-card>\n</div>\n<div class=\"cards\">\n    <mat-card class=\"card home filmes mat-elevation-z4\" routerLink=\"/filme\">\n        <mat-card-subtitle class=\"subtitle\">\n            <a class=\"child\" routerLink=\"/filme\">\n                <i class=\"material-icons\">movie</i> Filmes \n            </a>\n        </mat-card-subtitle>\n        <img mat-card-img src=\"../../../assets/img/popcorn.png\">\n        <mat-card-content class=\"child\">Ver todos os filmes da locadora</mat-card-content>\n    </mat-card>\n    <mat-card class=\"card home alugar mat-elevation-z4\" routerLink=\"/instancia\">\n        <mat-card-subtitle class=\"subtitle\">\n            <a class=\"child\" routerLink=\"/instancia\">\n                <i class=\"material-icons a\">local_movies</i>Filmes para alugar\n            </a>\n        </mat-card-subtitle>\n        <img mat-card-img src=\"../../../assets/img/locadora.jpg\">\n        <mat-card-content class=\"child\">Ver quais filmes estão disponíveis para alugar</mat-card-content>\n    </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Instancia } from '../instancia-filme.model';\nimport { InstanciaFilmeService } from '../instancia-filme.service';\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/pt';\nimport { Filme } from '../../filme/filme.model';\nimport { FilmeService } from '../../filme/filme.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-instancia-filme-update',\n  templateUrl: './instancia-filme-update.component.html',\n  styleUrls: ['./instancia-filme-update.component.css']\n})\nexport class InstanciaFilmeUpdateComponent implements OnInit {\n\n  filme_update: Filme;\n  filmes: Filme[];\n  instancia: Instancia;\n  startDate = new Date();\n\n  constructor(\n    private filmeService: FilmeService,\n    private instanciaService: InstanciaFilmeService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    registerLocaleData(localeFr, 'br');\n    const id = this.route.snapshot.paramMap.get('id');\n\n    this.filmeService.read().subscribe(filmes => {\n      this.filmes = filmes;\n    });\n\n    this.instanciaService.readById(id).subscribe(instancia => {\n      this.instancia = instancia;\n      this.filme_update = this.instancia.filme;\n      this.instancia.data_entrega = this.instanciaService.stringToDate(String(this.instancia.data_entrega));\n\n      // console.log(\"update: \", this.filme_update);\n      // console.log(\"date: \", this.instancia.data_entrega);\n      // console.log('update: ', this.instancia); \n      // console.log(typeof(this.instancia.data_entrega));\n      // console.log(typeof(this.instanciaService.stringToDate(String(this.instancia.data_entrega))));\n    });\n\n  }\n\n  updateInstanciaFilmeForm: FormGroup = this.formBuilder.group({\n    data_entrega: [, {\n      validators: [\n        Validators.required\n      ],\n      updateOn: \"change\"\n    }],\n    filme_select: [, {\n      validators: [\n        Validators.required\n      ],\n      updateOn: \"change\"\n    }],\n  });\n\n  updateInstancia() {\n    // console.log(\"final_date\", this.instancia.data_entrega);\n    this.instancia.filme = this.filme_update;\n    this.instanciaService.update(this.instancia).subscribe(() => {\n      this.instanciaService.showMessage('Instância alterada com sucesso!');\n      this.router.navigate(['/instancia']);\n    });\n  }\n \n  cancel(): void {\n    this.router.navigate(['/instancia']);\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Alterar instância</mat-card-title>\n\n    <form [formGroup]=\"updateInstanciaFilmeForm\" (submit)=\"updateInstancia()\">\n        <mat-form-field>\n            <!-- [ngModel]=\"instancia.data_entrega | date:'yyyy-MM-dd'\" (ngModelChange)=\"instancia.data_entrega=$event\" -->\n            <input \n                type=\"date\" placeholder=\"Data de entrega\" name=\"data_entrega\"                   \n                [(ngModel)]=\"instancia.data_entrega\"\n                matInput formControlName=\"data_entrega\"\n            > \n            <mat-error *ngIf=\"updateInstanciaFilmeForm.get('data_entrega').hasError('required')\">\n                Campo data de entrega é <strong>obrigatório</strong>\n            </mat-error>\n        </mat-form-field>\n        <!-- <mat-form-field>\n            <input matInput [matDatepicker]=\"picker\" placeholder=\"Pick a date\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>            \n        </mat-form-field> -->\n        <mat-form-field>\n            <mat-select [(ngModel)]=\"filme_update\" [(value)]=\"filme_update\" placeholder=\"Escolha um filme\" name=\"filme_select\" formControlName=\"filme_select\">\n                <mat-option *ngFor=\"let filme of filmes\" [value]=\"filme\">\n                    {{ filme.titulo }}\n                </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"updateInstanciaFilmeForm.get('filme_select').hasError('required')\">\n                Campo filme é <strong>obrigatório</strong>\n            </mat-error>\n        </mat-form-field>\n    </form>\n    <button type=\"submit\" mat-raised-button (click)=\"updateInstancia()\" color=\"primary\"\n    [disabled]=\"!updateInstanciaFilmeForm.valid\">\n        Alterar instância\n    </button>\n    <button mat-raised-button (click)=\"cancel()\">\n        Cancelar\n    </button>\n</mat-card>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Projeto Locadora :)';\n}\n","<app-header></app-header>\n<app-nav></app-nav>\n<!-- {{title}}<br> -->\n<!-- <app-filme></app-filme> -->\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Filme } from '../filme.model';\nimport { FilmeService } from '../filme.service';\n\n@Component({\n  selector: 'app-filme-desc',\n  templateUrl: './filme-desc.component.html',\n  styleUrls: ['./filme-desc.component.css']\n})\nexport class FilmeDescComponent implements OnInit {\n\n  filme: Filme;\n\n  constructor(\n    private filmeService: FilmeService, \n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    // this.dom(\"onInit\");\n    const id = this.route.snapshot.paramMap.get('id');\n    this.filmeService.readById(id).subscribe(filme => {\n      this.filme = filme;\n    });\n  }\n}\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>{{ filme.id }} - {{ filme.titulo }}</mat-card-title>\n        <mat-card-subtitle>\n            <div class=\"lista\" fxLayout=\"row\">\n                <div *ngFor=\"let genero of filme.genero\">\n                    {{ genero }} &nbsp;\n                </div>\n            </div>\n        </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <p>\n            {{ filme.sinopse }}\n        </p>\n        <strong>\n            <div class=\"lista\" fxLayout=\"row\">\n                <p>Diretor(es):&nbsp;</p>\n                <div *ngFor=\"let diretor of filme.diretores\">\n                    {{ diretor }} &nbsp;\n                </div>\n            </div>\n        </strong>\n        <strong>\n            <div class=\"lista\" fxLayout=\"row\">\n                <p>Ator(es):&nbsp;</p>\n                <div *ngFor=\"let ator of filme.atores\">\n                    {{ ator }} &nbsp;\n                </div>\n            </div>\n        </strong>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button color=\"primary\" routerLink=\"/filme\" mat-button>Voltar</button>\n    </mat-card-actions>\n</mat-card>","import { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { EMPTY, Observable } from 'rxjs';\nimport { Filme } from './filme.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilmeService {\n\n  baseUrl = 'http://localhost:8080/filmes';\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private http: HttpClient\n  ) { }\n\n  create(filme: Filme): Observable<Filme> {\n    return this.http.post<Filme>(this.baseUrl, filme).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  read(): Observable<Filme[]> {\n    return this.http.get<any[]>(this.baseUrl).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  readById(id: string): Observable<Filme> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.get<Filme>(url).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  update(filme: Filme): Observable<Filme> {\n    const url = `${this.baseUrl}/${filme.id}`;\n    return this.http.put<Filme>(url, filme).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  deleteById(filme: Filme): Observable<Filme> {\n    const url = `${this.baseUrl}/${filme.id}`;\n    return this.http.delete<Filme>(url).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  showMessage(msg: string, isError = false): void {\n    \n    this.snackBar.open(msg, \"Fechar\", {\n      duration: 3000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"top\",\n      panelClass: isError ? ['msg-error'] : ['msg-success']\n    });\n  }\n\n  errorHandler(e: any): Observable<any> {\n    console.log(e);\n    this.showMessage('Algo deu errado :\\\\', true);\n    return EMPTY;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { Filme } from '../filme.model';\nimport { FilmeService } from '../filme.service';\n\n@Component({\n  selector: 'app-filme-delete',\n  templateUrl: './filme-delete.component.html',\n  styleUrls: ['./filme-delete.component.css']\n})\nexport class FilmeDeleteComponent implements OnInit {\n\n  filme: Filme;\n\n  constructor(\n    private filmeService: FilmeService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.filmeService.readById(id).subscribe(filme => {\n      this.filme = filme;\n    });\n  }\n\n  deleteFilme(): void {\n    this.filmeService.deleteById(this.filme).subscribe(() => {\n      this.filmeService.showMessage('Filme deletado com sucesso!');\n      this.router.navigate(['/filme']);\n    });\n  }\n\n  avisoMsg(): void {\n    Swal.fire({\n      title: 'Tem certeza de que deseja remover esse filme?',\n      text: 'Você não poderá recuperá-lo.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Sim',\n      cancelButtonText: 'Não',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.deleteFilme();\n      } else if (result.isDismissed) {\n        this.cancel()\n      }\n    });\n  }\n\n  cancel(): void {\n    this.router.navigate(['/filme']);\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Remover filme</mat-card-title>\n    <form>\n        <mat-form-field>\n            <input matInput placeholder=\"Titulo\" [value]=\"filme.titulo\" name=\"titulo\" disabled>\n        </mat-form-field>\n\n        <mat-form-field>\n            <input matInput placeholder=\"Ano\" [value]=\"filme.ano\" name=\"ano\" disabled>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Sinopse\" [value]=\"filme.sinopse\" name=\"sinopse\" disabled>\n        </mat-form-field>\n    </form>\n    <button mat-raised-button (click)=\"avisoMsg()\" color=\"primary\">\n        Remover\n    </button>\n    \n    <button mat-raised-button (click)=\"cancel()\">\n        Cancelar\n    </button>\n</mat-card>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HeaderData } from '../footer/header-data.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n\n  private _headerData = new BehaviorSubject<HeaderData>({\n    title: 'Início',\n    icon: 'home',\n    routeUrl: ''\n  });\n\n  constructor() { }\n\n  get headerData(): HeaderData {\n    return this._headerData.value;\n  }\n\n  set headerData(headerData: HeaderData) {\n    this._headerData.next(headerData);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { HeaderComponent } from './components/template/header/header.component';\nimport { NavComponent } from './components/template/nav/nav.component';\nimport { FooterComponent } from './components/template/footer/footer.component';\nimport { HomeComponent } from './views/home/home.component';\n\nimport { FilmeCrudComponent } from './views/filme-crud/filme-crud.component';\nimport { FilmeCreateComponent } from './components/filme/filme-create/filme-create.component';\nimport { FilmeReadComponent } from './components/filme/filme-read/filme-read.component';\nimport { FilmeUpdateComponent } from './components/filme/filme-update/filme-update.component';\nimport { FilmeDeleteComponent } from './components/filme/filme-delete/filme-delete.component';\nimport { FilmeDescComponent } from './components/filme/filme-desc/filme-desc.component';\n\nimport { InstanciaFilmeCrudComponent } from './views/instancia-filme-crud/instancia-filme-crud.component';\nimport { InstanciaFilmeReadComponent } from './components/instancia-filme/instancia-filme-read/instancia-filme-read.component';\nimport { InstanciaFilmeCreateComponent } from './components/instancia-filme/instancia-filme-create/instancia-filme-create.component';\nimport { InstanciaFilmeUpdateComponent } from './components/instancia-filme/instancia-filme-update/instancia-filme-update.component';\nimport { InstanciaFilmeDeleteComponent } from './components/instancia-filme/instancia-filme-delete/instancia-filme-delete.component';\nimport { InstanciaFilmeReadDetailComponent } from './components/instancia-filme/instancia-filme-read-detail/instancia-filme-read-detail.component';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatDatepickerModule } from '@angular/material/datepicker'; \nimport { MatNativeDateModule } from '@angular/material/core'; \nimport { MatSelectModule } from '@angular/material/select';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n    HomeComponent,\n    FilmeCrudComponent,\n    FilmeCreateComponent,\n    FilmeReadComponent,\n    FilmeUpdateComponent,\n    FilmeDeleteComponent,\n    FilmeDescComponent,\n    InstanciaFilmeCrudComponent,\n    InstanciaFilmeReadComponent,\n    InstanciaFilmeCreateComponent,\n    InstanciaFilmeUpdateComponent,\n    InstanciaFilmeDeleteComponent,\n    InstanciaFilmeReadDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    AppRoutingModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    HttpClientModule, \n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    ReactiveFormsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSelectModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FilmeService } from '../filme.service';\nimport { Filme } from '../filme.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-filme-update',\n  templateUrl: './filme-update.component.html',\n  styleUrls: ['./filme-update.component.css']\n})\nexport class FilmeUpdateComponent implements OnInit {\n\n  filme: Filme;\n\n  generos: string[] = [\n    \"Ação\",\n    \"Aventura\",\n    \"Drama\",\n    \"Fantasia\",\n    \"Ficção científica\"\n  ];\n\n  constructor(\n    private filmeService: FilmeService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.filmeService.readById(id).subscribe(filme => {\n      this.filme = filme;\n      // console.log('update: ', this.filme);\n      //this.markCheckBox();\n    });\n  }\n\n  updateFilme(): void {\n    this.convertGenero();\n    this.filmeService.update(this.filme).subscribe(() => {\n      this.filmeService.showMessage('Filme alterado com sucesso!');\n      this.router.navigate(['/filme']);\n    });\n  }\n\n  convertGenero(): void {\n    for (let i = 0; i < this.filme.genero.length; i++) {\n      if (!this.filme.genero[i]) {\n        this.filme.genero[i] = null;\n      } else {\n        this.filme.genero[i] = this.generos[i];\n      }\n    }\n  }\n\n  cancel(): void {\n    this.router.navigate(['/filme'])\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Alterar filme</mat-card-title>\n    <form>\n        <mat-form-field>\n            <input matInput placeholder=\"Titulo\" [(ngModel)]=\"filme.titulo\" name=\"titulo\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Ano\" [(ngModel)]=\"filme.ano\" name=\"ano\">\n        </mat-form-field>\n        <div class=\"row\">\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 1\" name=\"diretor1\" matInput [(ngModel)]=\"filme.diretores[0]\">\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 2\" name=\"diretor2\" matInput [(ngModel)]=\"filme.diretores[1]\">\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 3\" name=\"diretor3\" matInput [(ngModel)]=\"filme.diretores[2]\">\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 4\" name=\"diretor4\" matInput [(ngModel)]=\"filme.diretores[3]\">\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 5\" name=\"diretor5\" matInput [(ngModel)]=\"filme.diretores[4]\">\n            </mat-form-field>\n        </div>\n        <div class=\"row\">\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 1\" [(ngModel)]=\"filme.atores[0]\" name=\"ator1\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 2\" [(ngModel)]=\"filme.atores[1]\" name=\"ator2\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 3\" [(ngModel)]=\"filme.atores[2]\" name=\"ator3\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 4\" [(ngModel)]=\"filme.atores[3]\" name=\"ator4\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 5\" [(ngModel)]=\"filme.atores[4]\" name=\"ator5\">\n            </mat-form-field>\n        </div>\n        <div class=\"genero\">\n            <mat-list-item>\n                <mat-checkbox [(ngModel)]=\"filme.genero[0]\" name=\"genero1\">{{ generos[0] }}</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[1]\" name=\"genero2\">{{ generos[1] }}</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[2]\" name=\"genero3\">{{ generos[2] }}</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[3]\" name=\"genero4\">{{ generos[3] }}</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[4]\" name=\"genero5\">{{ generos[4] }}</mat-checkbox>\n            </mat-list-item>\n        </div>\n        <mat-form-field>\n            <input matInput placeholder=\"Sinopse\" [(ngModel)]=\"filme.sinopse\" name=\"sinopse\">\n        </mat-form-field>\n    </form>\n</mat-card>\n<br>\n<button mat-raised-button (click)=\"updateFilme()\" color=\"primary\">\n    Alterar\n</button>\n\n<button mat-raised-button (click)=\"cancel()\">\n    Cancelar\n</button>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Instancia } from '../instancia-filme.model';\nimport { InstanciaFilmeService } from '../instancia-filme.service';\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/pt';\n\n@Component({\n  selector: 'app-instancia-filme-read-detail',\n  templateUrl: './instancia-filme-read-detail.component.html',\n  styleUrls: ['./instancia-filme-read-detail.component.css']\n})\nexport class InstanciaFilmeReadDetailComponent implements OnInit {\n\n  instancia: Instancia;\n\n  constructor(\n    private instanciaService: InstanciaFilmeService, \n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    registerLocaleData(localeFr, 'br');\n    const id = this.route.snapshot.paramMap.get('id');\n    this.instanciaService.readById(id).subscribe(instancia => {\n      this.instancia = instancia;\n    });\n  }\n\n}\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>Instância - {{ instancia.id }}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <p>\n            Data de entrega: {{ instancia.data_entrega | date: 'longDate':'UTC':'br' }}\n        </p>\n    </mat-card-content>\n    <mat-card-content>\n        <p>\n            Filme: {{ instancia.filme.titulo }}\n        </p>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button color=\"primary\" routerLink=\"/instancia\" mat-button>Voltar</button>\n    </mat-card-actions>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  opened = false;\n  btnText: string = \"navigate_next\";\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggleNav() {\n    this.opened = !this.opened;\n    // console.log(this.opened);\n    this.btnText = \n      this.btnText == 'navigate_next' \n        ? 'navigate_before' \n        : 'navigate_next';\n  }\n\n}\n","<mat-sidenav-container class=\"container\">\n    <mat-sidenav class=\"sidenav\" mode=\"side\" [(opened)]=\"opened\" \n    fixedInViewport=\"true\" fixedTopGap=\"64\">\n        <mat-nav-list class=\"nav-list\">\n            <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">home</i>\n                Início\n            </a>\n            <a mat-list-item routerLink=\"/filme\">\n                <i class=\"material-icons\">movie</i>\n                Filmes\n            </a>\n            <a mat-list-item routerLink=\"/instancia\">\n                <i class=\"material-icons\">local_movies</i>\n                Alugar\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"content\">\n        <button mat-raised-button color=\"primary\" (click)=\"toggleNav()\">\n            <i class=\"material-icons\">{{ btnText }}</i>\n            <!-- Navegar -->\n        </button>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Filme } from '../filme.model';\nimport { FilmeService } from '../filme.service';\n\n@Component({\n  selector: 'app-filme-create',\n  templateUrl: './filme-create.component.html',\n  styleUrls: ['./filme-create.component.css']\n})\nexport class FilmeCreateComponent implements OnInit {\n\n  generos: string[] = [\n    \"Ação\",\n    \"Aventura\",\n    \"Drama\",\n    \"Ficção científica\",\n    \"Fantasia\"\n  ];\n\n  filme: Filme = {\n    ano: null,\n    titulo: '',\n    diretores: [],\n    atores: [],\n    genero: [],\n    sinopse: '',\n  }\n\n  constructor(\n    private filmeService: FilmeService,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  createFilmeForm: FormGroup = this.formBuilder.group({\n    ano: [, {\n      validators: [\n        Validators.pattern(\"^(19[0-9][0-9]|20[01][0-9]|2020)$\"), Validators.required\n      ],\n      updateOn: \"change\"\n    }],\n    titulo: [, {\n      validators: [\n        Validators.required, Validators.minLength(2), Validators.maxLength(30)\n      ], updateOn: \"change\"\n    }],\n    diretores: [, {\n      validators: [\n        Validators.required\n      ], updateOn: \"change\"\n    }],\n    atores: [, {\n      validators: [\n        Validators.required\n      ], updateOn: \"change\"\n    }],\n    sinopse: [, {\n      validators: [\n        Validators.required, Validators.minLength(5), Validators.maxLength(500)\n      ], updateOn: \"change\"\n    }],\n    noValidation: [, { updateOn: \"change\" }]\n  });\n\n  createFilme(): void {\n    // console.log(\"antes: \", this.filme.genero);\n    this.convertGenero();\n    this.filmeService.create(this.filme).subscribe(() => {\n      this.filmeService.showMessage('Filme criado com sucesso!');\n      this.router.navigate(['/filme']);\n    });\n  }\n\n  cancel(): void {\n    this.router.navigate(['/filme']);\n  }\n\n  convertGenero(): void {\n    console.log(this.filme);\n    for (let i = 0; i < this.filme.genero.length; i++) {\n      if (!this.filme.genero[i]) {\n        this.filme.genero[i] = null;\n      } else {\n        this.filme.genero[i] = this.generos[i];\n      }\n    }\n  }\n}\n","<mat-card>\n    <mat-card-title>Novo filme</mat-card-title>\n    <form [formGroup]=\"createFilmeForm\" (submit)=\"createFilme()\">\n        <mat-form-field>\n            <input matInput placeholder=\"Titulo\" [(ngModel)]=\"filme.titulo\" name=\"titulo\" formControlName=\"titulo\">\n            <mat-error *ngIf=\"createFilmeForm.get('titulo').hasError('required')\">\n                Campo título é <strong>obrigatório</strong>\n            </mat-error>\n            <mat-error *ngIf=\"createFilmeForm.get('titulo').hasError('minLength')\">\n                Título precisa ter mais de dois caracteres\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Ano\" [(ngModel)]=\"filme.ano\" name=\"ano\" formControlName=\"ano\">\n            <mat-error *ngIf=\"createFilmeForm.get('ano').hasError('required')\">\n                Campo ano é <strong>obrigatório</strong>\n            </mat-error>\n            <mat-error *ngIf=\"createFilmeForm.get('ano').hasError('pattern')\">\n                Ano inválido\n            </mat-error>\n        </mat-form-field>\n        <div class=\"row\">\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 1\" name=\"diretor\" formControlName=\"diretores\" matInput\n                    [(ngModel)]=\"filme.diretores[0]\">\n                <mat-error *ngIf=\"createFilmeForm.get('diretores').hasError('required')\">\n                    Campo diretor é <strong>obrigatório</strong>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 2\" name=\"diretor\" formControlName=\"noValidation\" matInput\n                    [(ngModel)]=\"filme.diretores[1]\">\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 3\" name=\"diretor\" formControlName=\"noValidation\" matInput\n                    [(ngModel)]=\"filme.diretores[2]\">\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 4\" name=\"diretor\" formControlName=\"noValidation\" matInput\n                    [(ngModel)]=\"filme.diretores[3]\">\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 5\" name=\"diretor\" formControlName=\"noValidation\" matInput\n                    [(ngModel)]=\"filme.diretores[4]\">\n            </mat-form-field>\n        </div>\n        <div class=\"row\">\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 1\" [(ngModel)]=\"filme.atores[0]\" formControlName=\"atores\"\n                    name=\"atores\">\n                <mat-error *ngIf=\"createFilmeForm.get('atores').hasError('required')\">\n                    Campo ator é <strong>obrigatório</strong>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 2\" name=\"atores\" formControlName=\"noValidation\"\n                    [(ngModel)]=\"filme.atores[1]\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 3\" name=\"atores\" formControlName=\"noValidation\"\n                    [(ngModel)]=\"filme.atores[2]\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 4\" name=\"atores\" formControlName=\"noValidation\"\n                    [(ngModel)]=\"filme.atores[3]\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 5\" name=\"atores\" formControlName=\"noValidation\"\n                    [(ngModel)]=\"filme.atores[4]\">\n            </mat-form-field>\n        </div>\n        <div class=\"genero\">\n            <mat-list-item>\n                <mat-checkbox [(ngModel)]=\"filme.genero[0]\" name=\"genero1\" formControlName=\"noValidation\">Ação</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[1]\" name=\"genero2\" formControlName=\"noValidation\">Aventura</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[2]\" name=\"genero3\" formControlName=\"noValidation\">Drama</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[3]\" name=\"genero4\" formControlName=\"noValidation\">Ficção científica</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[4]\" name=\"genero5\" formControlName=\"noValidation\">Fantasia</mat-checkbox>\n            </mat-list-item>\n        </div>  \n        <mat-form-field>\n            <input matInput placeholder=\"Sinopse\" [(ngModel)]=\"filme.sinopse\" name=\"sinopse\" formControlName=\"sinopse\">\n            <mat-error *ngIf=\"createFilmeForm.get('sinopse').hasError('required')\">\n                Campo sinopse é <strong>obrigatório</strong>\n            </mat-error>\n        </mat-form-field>\n    </form>\n</mat-card>\n<button type=\"submit\" mat-raised-button (click)=\"createFilme()\" color=\"primary\" [disabled]=\"!createFilmeForm.valid\">\n    Criar Filme\n</button>\n<button mat-raised-button (click)=\"cancel()\">\n    Cancelar\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { HeaderService } from './header.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n    private headerService: HeaderService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  get title(): string {\n    return this.headerService.headerData.title;\n  }\n\n  get icon(): string {\n    return this.headerService.headerData.icon;\n  }\n  \n  get routeUrl(): string {\n    return this.headerService.headerData.routeUrl;\n  }\n}\n","<mat-toolbar class=\"header mat-elevation-z4\">\n    <span>\n        <a routerLink=\"/\">\n            <img class=\"logo\" src=\"assets/img/movie.png\" alt=\"logo\">\n        </a>\n    </span>\n    <span class=\"title-group\">\n        <a routerLink=\"{{ routeUrl }}\">\n            <i class=\"material-icons\">{{ icon }}</i><span>{{ title }}</span>\n        </a>\n    </span>\n</mat-toolbar>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule  } from '@angular/router';\n\nimport { HomeComponent } from './views/home/home.component';\nimport { FilmeCrudComponent  } from './views/filme-crud/filme-crud.component';\nimport { FilmeCreateComponent } from './components/filme/filme-create/filme-create.component';\nimport { FilmeUpdateComponent } from './components/filme/filme-update/filme-update.component';\nimport { FilmeDeleteComponent } from './components/filme/filme-delete/filme-delete.component';\nimport { FilmeDescComponent } from './components/filme/filme-desc/filme-desc.component';\nimport { InstanciaFilmeCrudComponent } from './views/instancia-filme-crud/instancia-filme-crud.component';\nimport { InstanciaFilmeCreateComponent } from './components/instancia-filme/instancia-filme-create/instancia-filme-create.component';\nimport { InstanciaFilmeUpdateComponent } from './components/instancia-filme/instancia-filme-update/instancia-filme-update.component';\nimport { InstanciaFilmeDeleteComponent } from './components/instancia-filme/instancia-filme-delete/instancia-filme-delete.component';\nimport { InstanciaFilmeReadDetailComponent } from './components/instancia-filme/instancia-filme-read-detail/instancia-filme-read-detail.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent\n  },\n  {\n    path: \"filme\",\n    component: FilmeCrudComponent\n  },\n  {\n    path: \"filme/create\",\n    component: FilmeCreateComponent\n  },\n  {\n    path: \"filme/update/:id\",\n    component: FilmeUpdateComponent\n  },\n  {\n    path: \"filme/delete/:id\",\n    component: FilmeDeleteComponent\n  },\n  {\n    path: \"filme/read/:id\",\n    component: FilmeDescComponent\n  },\n  {\n    path: \"instancia\",\n    component: InstanciaFilmeCrudComponent\n  },\n  {\n    path: \"instancia/create\",\n    component: InstanciaFilmeCreateComponent\n  },\n  {\n    path: \"instancia/update/:id\",\n    component: InstanciaFilmeUpdateComponent\n  },\n  {\n    path: \"instancia/delete/:id\",\n    component: InstanciaFilmeDeleteComponent\n  },\n  {\n    path: \"instancia/read/:id\",\n    component: InstanciaFilmeReadDetailComponent\n  }\n  \n]\n\n@NgModule({\n  imports:  [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { AfterViewChecked, AfterViewInit, Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { HeaderService } from '../../template/header/header.service';\nimport { Filme } from '../filme.model';\nimport { FilmeService } from '../filme.service';\n\ndeclare let name: any;\n\n@Component({\n  selector: 'app-filme-read',\n  templateUrl: './filme-read.component.html',\n  styleUrls: ['./filme-read.component.css'],\n})\nexport class FilmeReadComponent implements OnInit, AfterViewChecked {\n\n  filmes: Filme[];\n  generosRow: ElementRef;\n\n  displayedColumns = ['id', 'titulo', 'generos', 'ano', 'action'];\n\n  i: number = 1;\n  cond: boolean = true;\n  constructor(\n    private filmeService: FilmeService,\n    private elRef: ElementRef\n  ) { }\n\n  ngAfterViewChecked(): void {\n    if (this.cond) {\n      this.generosRow = this.elRef.nativeElement.querySelectorAll(\"td.row-genero\");\n      // console.log(\"generosRow: \", this.generosRow);\n      this.formatGenero();\n      this.i++;\n      this.cond = false;\n    }\n  }\n\n  ngOnInit(): void {\n    // this.dom(\"onInit\");\n    this.filmeService.read().subscribe(filmes => {\n      this.filmes = filmes;\n      // console.log(\"filmes:\", this.filmes);\n    });\n  }\n\n  formatGenero() {\n    // this.generosRow.forEach(element => {\n    // });\n    for (let i = 0; i < this.filmes.length; i++) {\n      this.generosRow[i].textContent = this.generosRow[i].textContent.replace(/\\,,,,/g, \", \");\n      this.generosRow[i].textContent = this.generosRow[i].textContent.replace(/\\,,,,/g, \"\");\n      this.generosRow[i].textContent = this.generosRow[i].textContent.replace(/\\,,,/g, \", \");\n      this.generosRow[i].textContent = this.generosRow[i].textContent.replace(/\\,,,/g, \"\");\n      this.generosRow[i].textContent = this.generosRow[i].textContent.replace(/\\,,/g, \", \");\n      this.generosRow[i].textContent = this.generosRow[i].textContent.replace(/\\,,/g, \"\");\n      this.generosRow[i].textContent = this.generosRow[i].textContent.replace(/\\,/g, \", \");\n      if (this.generosRow[i].textContent[0] === \",\") {\n        // console.log(this.generosRow[i].textContent);\n        this.generosRow[i].textContent = this.generosRow[i].textContent.slice(1, this.generosRow[i].textContent.length);\n      }\n      if (this.generosRow[i].textContent[this.generosRow[i].textContent.length - 1] === \",\") {\n        this.generosRow[i].textContent = this.generosRow[i].textContent.slice(0, this.generosRow[i].textContent.length - 1);\n      }\n    }\n  }\n\n  // dom(str: string) {\n  //   //querySelector(\".mat-cell.cdk-cell.cdk-column-generos.mat-column-generos.ng-star-inserted\");\n  //   console.log(`filme-read: (${str})`, generosRow);\n  // }\n\n}\n","<div class=\"mat-elevation-z4\">\n    <table matSort mat-table [dataSource]=\"filmes\">\n        <!-- *ngIf=\"filmes.length !== 0; else elseBlock\" -->\n        <!-- Id Column -->\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n            <td mat-cell *matCellDef=\"let row\"><a routerLink=\"/filme/read/{{ row.id }}\">{{ row.id }}</a></td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"titulo\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Titulo</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.titulo }}</td>\n        </ng-container>\n\n        <!-- {{ row.genero[0] }}, {{ row.genero[1] }} -->\n        <ng-container matColumnDef=\"generos\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Genêros</th>\n            <td class=\"row-genero\" mat-cell *matCellDef=\"let row\">{{ row.genero }}</td> \n        </ng-container>\n        \n        <!-- <app-filme-read-genero></app-filme-read-genero> -->\n\n        <ng-container matColumnDef=\"ano\"> \n            <th mat-header-cell *matHeaderCellDef>Ano</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.ano }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef>Ação</th>\n            <td mat-cell *matCellDef=\"let row\">\n                <a routerLink=\"/filme/update/{{ row.id }}\" class=\"edit\">\n                    <i class=\"material-icons\">edit</i>\n                </a>\n                <a routerLink=\"/filme/delete/{{ row.id }}\" class=\"delete\">\n                    <i class=\"material-icons\">delete</i>\n                </a>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}