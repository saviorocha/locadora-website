{"version":3,"sources":["webpack:///src/app/components/instancia-filme/instancia-filme.service.ts","webpack:///src/app/views/filme-crud/filme-crud.component.ts","webpack:///src/app/views/filme-crud/filme-crud.component.html","webpack:///src/app/components/instancia-filme/instancia-filme-read/instancia-filme-read.component.ts","webpack:///src/app/components/instancia-filme/instancia-filme-read/instancia-filme-read.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/components/instancia-filme/instancia-filme-create/instancia-filme-create.component.ts","webpack:///src/app/components/instancia-filme/instancia-filme-create/instancia-filme-create.component.html","webpack:///src/app/components/instancia-filme/instancia-filme-delete/instancia-filme-delete.component.ts","webpack:///src/app/components/instancia-filme/instancia-filme-delete/instancia-filme-delete.component.html","webpack:///src/app/components/template/footer/footer.component.ts","webpack:///src/app/components/template/footer/footer.component.html","webpack:///src/app/views/instancia-filme-crud/instancia-filme-crud.component.ts","webpack:///src/app/views/instancia-filme-crud/instancia-filme-crud.component.html","webpack:///src/app/views/home/home.component.ts","webpack:///src/app/views/home/home.component.html","webpack:///src/app/components/instancia-filme/instancia-filme-update/instancia-filme-update.component.ts","webpack:///src/app/components/instancia-filme/instancia-filme-update/instancia-filme-update.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/filme/filme-desc/filme-desc.component.ts","webpack:///src/app/components/filme/filme-desc/filme-desc.component.html","webpack:///src/app/components/filme/filme.service.ts","webpack:///src/app/components/filme/filme-delete/filme-delete.component.ts","webpack:///src/app/components/filme/filme-delete/filme-delete.component.html","webpack:///src/app/components/template/header/header.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/filme/filme-update/filme-update.component.ts","webpack:///src/app/components/filme/filme-update/filme-update.component.html","webpack:///src/app/components/instancia-filme/instancia-filme-read-detail/instancia-filme-read-detail.component.ts","webpack:///src/app/components/instancia-filme/instancia-filme-read-detail/instancia-filme-read-detail.component.html","webpack:///src/app/components/template/nav/nav.component.ts","webpack:///src/app/components/template/nav/nav.component.html","webpack:///src/app/components/filme/filme-create/filme-create.component.ts","webpack:///src/app/components/filme/filme-create/filme-create.component.html","webpack:///src/app/components/template/header/header.component.ts","webpack:///src/app/components/template/header/header.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/components/filme/filme-read/filme-read.component.ts","webpack:///src/app/components/filme/filme-read/filme-read.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["InstanciaFilmeService","snackBar","http","baseUrl","msg","isError","open","duration","horizontalPosition","verticalPosition","instancia","post","pipe","obj","e","errorHandler","get","id","url","put","console","log","showMessage","dateStr","slice","year","split","month","day","date","Date","Number","providedIn","FilmeCrudComponent","router","headerService","elRef","headerData","title","icon","routeUrl","domTeste","navigate","elsTag","nativeElement","getElementsByTagName","irParaFilmeCreate","selector","templateUrl","styleUrls","InstanciaFilmeReadComponent","instanciaService","displayedColumns","read","subscribe","instancias","environment","production","InstanciaFilmeCreateComponent","filmeService","formBuilder","data_entrega","filme","createInstanciaFilmeForm","group","validators","required","updateOn","filme_select","filmes","selectedFilme","create","createInstancia","cancel","InstanciaFilmeDeleteComponent","route","snapshot","paramMap","readById","deleteById","fire","text","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","deleteInstancia","isDismissed","avisoMsg","FooterComponent","InstanciaFilmeCrudComponent","HomeComponent","InstanciaFilmeUpdateComponent","startDate","updateInstanciaFilmeForm","filme_update","stringToDate","String","update","updateInstancia","AppComponent","FilmeDescComponent","FilmeService","panelClass","FilmeDeleteComponent","deleteFilme","HeaderService","_headerData","value","next","AppModule","declarations","imports","providers","bootstrap","FilmeUpdateComponent","generos","convertGenero","i","genero","length","updateFilme","InstanciaFilmeReadDetailComponent","NavComponent","opened","btnText","toggleNav","FilmeCreateComponent","ano","titulo","diretores","atores","sinopse","createFilmeForm","pattern","minLength","maxLength","noValidation","createFilme","HeaderComponent","routes","path","component","AppRoutingModule","forRoot","exports","FilmeReadComponent","cond","generosRow","querySelectorAll","formatGenero","textContent","replace","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n// import { type } from 'os';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Instancia } from './instancia-filme.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class  InstanciaFilmeService {\n\n  baseUrl = \"http://localhost:8080/instancias\";\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private http: HttpClient\n  ) { }\n\n  showMessage(msg: string, isError = false): void {\n    \n    this.snackBar.open(msg, \"Fechar\", {\n      duration: 3000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"top\"\n    });\n  }\n\n  create(instancia: Instancia): Observable<Instancia> {\n    return this.http.post<Instancia> (this.baseUrl, instancia).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  read(): Observable<Instancia[]> {\n    return this.http.get<any[]>(this.baseUrl).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  readById(id: string): Observable<Instancia> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.get<Instancia>(url).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  update(instancia: Instancia): Observable<Instancia> {\n    const url = `${this.baseUrl}/${instancia.id}`;\n    return this.http.put<Instancia>(url, instancia).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  deleteById(instancia: Instancia): Observable<Instancia> {\n    const url = `${this.baseUrl}/${instancia.id}`;\n    return this.http.delete<Instancia>(url).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n\n  errorHandler(e: any): Observable<any> {\n    console.log(e);\n    this.showMessage('Algo deu errado :\\\\', true);\n    return EMPTY;\n  }\n\n  stringToDate(dateStr: string): Date {\n    dateStr = dateStr.slice(0,10);\n    let year = dateStr.split(\"-\")[0],\n        month = dateStr.split(\"-\")[1],\n        day = dateStr.split(\"-\")[2];\n    let date: Date = new Date(Number(year), Number(month), Number(day)); \n    return date;\n  }\n}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HeaderService } from 'src/app/components/template/header/header.service';\n\n@Component({\n  selector: 'app-filme-crud',\n  templateUrl: './filme-crud.component.html',\n  styleUrls: ['./filme-crud.component.css']\n})\nexport class FilmeCrudComponent implements OnInit {\n\n  constructor(\n    private router: Router, \n    private headerService: HeaderService,\n    private elRef: ElementRef\n  ) {\n    headerService.headerData = {\n      title: \"Filmes\",\n      icon: \"movie\",\n      routeUrl: \"/filme\"\n    }\n  }\n\n  ngOnInit(): void {\n    this.domTeste();\n  }\n\n  irParaFilmeCreate(): void {\n    this.router.navigate(['/filme/create']);\n  }\n\n  domTeste() {\n    let elsTag = this.elRef.nativeElement.getElementsByTagName(\"td\");\n  }\n\n}\n","<button mat-raised-button (click)=\"irParaFilmeCreate()\" color=\"primary\">\n    Novo filme\n</button>\n<app-filme-read></app-filme-read>","import { Component, OnInit } from '@angular/core';\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/pt';\nimport { Instancia } from '../instancia-filme.model';\nimport { InstanciaFilmeService } from '../instancia-filme.service';\nimport { FilmeCrudComponent } from 'src/app/views/filme-crud/filme-crud.component';\nimport { Filme } from '../../filme/filme.model';\nimport { FilmeService } from '../../filme/filme.service';\n\n@Component({\n  selector: 'app-instancia-filme-read',\n  templateUrl: './instancia-filme-read.component.html',\n  styleUrls: ['./instancia-filme-read.component.css']\n})\nexport class InstanciaFilmeReadComponent implements OnInit {\n\n  instancias: Instancia[];\n  // filme: Filme;\n  displayedColumns = ['id', 'data_entrega', 'filme', 'action'];\n\n  constructor(\n    private instanciaService: InstanciaFilmeService\n  ) { }\n\n  ngOnInit(): void {\n    registerLocaleData(localeFr, 'br'); \n    this.instanciaService.read().subscribe(instancias => {\n      this.instancias = instancias;\n      // console.log(\"instancias: \", this.instancias);\n      // this.formatDate();\n    })\n  }\n\n}\n","<div class=\"mat-elevation-z4\">\n    <table matSort mat-table [dataSource]=\"instancias\">\n        <!-- *ngIf=\"filmes.length !== 0; else elseBlock\" -->\n        <!-- Id Column -->\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n            <td mat-cell *matCellDef=\"let row\"><a routerLink=\"/instancia/read/{{ row.id }}\">{{ row.id }}</a></td> <!-- routerLink=\"/instancias/read/{{ row.id }}\" -->\n        </ng-container>\n\n        <ng-container matColumnDef=\"data_entrega\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Data de entrega</th>\n            <td mat-cell *matCellDef=\"let row\"><a >{{ row.data_entrega | date: 'longDate':'UTC':'br' }}</a></td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"filme\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Filme</th>\n            <td mat-cell *matCellDef=\"let row\"><a >{{ row.filme.titulo }}</a></td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef>Ação</th>\n            <td mat-cell *matCellDef=\"let row\">\n                <a routerLink=\"/instancia/update/{{ row.id }}\" class=\"edit\">\n                    <i class=\"material-icons\">edit</i>\n                </a>\n                <a routerLink=\"/instancia/delete/{{ row.id }}\" class=\"delete\">\n                    <i class=\"material-icons\">delete</i>\n                </a>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <!-- <mat-paginator #paginator [length]=\"instancias.length\" [pageIndex]=\"0\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 50]\">\n    </mat-paginator> -->\n    <!-- <ng-template #elseBlock>\n        <p>Parece que estamos sem filmes</p>\n        <img src=\"../../../../assets/img/empty-filme-read.jpeg\" alt=\"shrug\">\n    </ng-template> -->\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Filme } from '../../filme/filme.model';\nimport { FilmeService } from '../../filme/filme.service';\nimport { Instancia } from '../instancia-filme.model';\nimport { InstanciaFilmeService } from '../instancia-filme.service';\n\n@Component({\n  selector: 'app-instancia-filme-create',\n  templateUrl: './instancia-filme-create.component.html',\n  styleUrls: ['./instancia-filme-create.component.css']\n})\nexport class InstanciaFilmeCreateComponent implements OnInit {\n\n  filmes: Filme[];\n  selectedFilme: Filme;\n  instancia: Instancia = {\n    // id: 101,\n    // data_entrega: new Date(2020, 10, 17)\n    data_entrega: null,\n    filme: null\n  };\n\n  constructor(\n    private instanciaService: InstanciaFilmeService,\n    private filmeService: FilmeService,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.filmeService.read().subscribe(filmes => {\n      this.filmes = filmes;\n      // console.log(\"create - filme: \", this.filmes);\n    });\n  }\n\n  createInstanciaFilmeForm: FormGroup = this.formBuilder.group({\n    data_entrega: [, {\n      validators: [\n        Validators.required\n      ],\n      updateOn: \"change\"\n    }],\n    filme_select: [, {\n      validators: [\n        Validators.required\n      ],\n      updateOn: \"change\"\n    }],\n  });\n  //  = this.formBuilder.group({\n  //   name: '',\n  //   entregaRange: this.formBuilder.group({\n  //     startDate: '',\n  //     endDate: ''\n  //   })\n  // });\n\n  createInstancia(): void {\n    this.instancia.filme = this.selectedFilme;\n    this.instanciaService.create(this.instancia).subscribe(() => {\n      // console.log(\"create - instancia: \", this.instancia);\n      this.instanciaService.showMessage(\"Instância criada\");\n      this.router.navigate(['/instancia']);\n    });\n  }\n\n  cancel(): void {\n    this.router.navigate(['/instancia']);\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Nova instância</mat-card-title>\n\n    <form [formGroup]=\"createInstanciaFilmeForm\" (submit)=\"createInstancia()\">\n        <mat-form-field>\n            <!-- <mat-label>Choose Date Range</mat-label>\n            <mat-date-range-input [rangePicker]=\"entregaRangePicker\" formGroupName=\"createInstanciaFilmeForm\">\n                <input matStartDate formControlName=\"startDate\" placeholder=\"Start date\">\n                <input matEndDate formControlName=\"endDate\" placeholder=\"End date\">\n            </mat-date-range-input>\n            <mat-datepicker-toggle matSuffix [for]=\"entregaRangePicker\"></mat-datepicker-toggle>\n            <mat-date-range-picker #entregaRangePicker></mat-date-range-picker>\n            <mat-error *ngIf=\"createInstanciaFilmeForm.get('entregaRange').get('startDate').hasError('matStartDateInvalid')\">\n                Invalid start date\n            </mat-error>\n            <mat-error *ngIf=\"createInstanciaFilmeForm.get('entregaRange').get('endDate').hasError('matEndDateInvalid')\">\n                Invalid end date\n            </mat-error>     -->\n            <!-- <input matInput type=\"date\" placeholder=\"Data de entrega\" [(ngModel)]=\"instancia.data_entrega\" name=\"data\"\n                formControlName=\"data_entrega\">\n             -->\n            <input \n                type=\"date\" placeholder=\"Data de entrega\" name=\"data_entrega\"\n                [ngModel]=\"instancia.data_entrega | date:'yyyy-MM-dd'\" (ngModelChange)=\"instancia.data_entrega=$event\"   \n                matInput formControlName=\"data_entrega\"\n            >\n            <mat-error *ngIf=\"createInstanciaFilmeForm.get('data_entrega').hasError('required')\">\n                Campo data de entrega é <strong>obrigatório</strong>\n            </mat-error>\n        </mat-form-field>\n        <!-- <br> -->\n        <mat-form-field>\n            <mat-select [(ngModel)]=\"selectedFilme\" placeholder=\"Escolha o filme\" name=\"filme_select\" formControlName=\"filme_select\">\n                <mat-option *ngFor=\"let filme of filmes\" [value]=\"filme\">\n                    {{ filme.titulo }}\n                </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"createInstanciaFilmeForm.get('filme_select').hasError('required')\">\n                Campo filme é <strong>obrigatório</strong>\n            </mat-error>\n        </mat-form-field>\n    </form>\n</mat-card>\n<button type=\"submit\" mat-raised-button (click)=\"createInstancia()\" color=\"primary\"\n    [disabled]=\"!createInstanciaFilmeForm.valid\">\n    Criar Instância\n</button>\n<button mat-raised-button (click)=\"cancel()\">\n    Cancelar\n</button> ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { Instancia } from '../instancia-filme.model';\nimport { InstanciaFilmeService } from '../instancia-filme.service';\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/pt';\n\n@Component({\n  selector: 'app-instancia-filme-delete',\n  templateUrl: './instancia-filme-delete.component.html',\n  styleUrls: ['./instancia-filme-delete.component.css']\n})\nexport class InstanciaFilmeDeleteComponent implements OnInit {\n\n  instancia: Instancia;\n\n  constructor(\n    private instanciaService: InstanciaFilmeService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    registerLocaleData(localeFr, 'br');\n    const id = this.route.snapshot.paramMap.get('id');\n    this.instanciaService.readById(id).subscribe(instancia => {\n      this.instancia = instancia;\n      // console.log(\"delete: \", this.instancia)\n    });\n  }\n\n  deleteInstancia(): void {\n    this.instanciaService.deleteById(this.instancia).subscribe(() => {\n      this.instanciaService.showMessage('Instância deletada com sucesso!');\n      this.router.navigate(['/instancia']);\n    });\n  }\n\n  avisoMsg(): void {\n    Swal.fire({\n      title: 'Tem certeza de que deseja remover esta instância?',\n      text: 'Você não poderá recuperá-la.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Sim',\n      cancelButtonText: 'Não',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.deleteInstancia();\n      } else if (result.isDismissed) {\n        this.cancel()\n      }\n    });\n  }\n\n  cancel(): void {\n    this.router.navigate(['/instancia']);\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Remover instância</mat-card-title>\n    <form>\n        <mat-form-field>\n            <input type=\"text\" value=\"{{ instancia.data_entrega | date: 'longDate':'UTC':'br' }}\" name=\"data_entrega\" disabled matInput>\n                <!-- [ngModel]=\"instancia.data_entrega | date: 'yyyy-MM-dd'\" matInput> -->\n        </mat-form-field>\n        <br>\n        <mat-form-field>\n            <input type=\"text\" value=\"{{ instancia.filme.titulo }}\" disabled name=\"filme\" matInput>\n        </mat-form-field>\n    </form>\n    <button mat-raised-button (click)=\"avisoMsg()\" color=\"primary\">\n        Remover\n    </button>\n\n    <button mat-raised-button (click)=\"cancel()\">\n        Cancelar\n    </button>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n        Feito por Sávio\n    </span>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { HeaderService } from 'src/app/components/template/header/header.service';\n\n@Component({\n  selector: 'app-instancia-filme-crud',\n  templateUrl: './instancia-filme-crud.component.html',\n  styleUrls: ['./instancia-filme-crud.component.css']\n})\nexport class InstanciaFilmeCrudComponent implements OnInit {\n\n  constructor(\n    private headerService: HeaderService,\n  ) { \n    headerService.headerData = {\n      title: \"Alugar\",\n      icon: \"local_movies\",\n      routeUrl: \"/instancia\"\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button mat-raised-button color=\"primary\" routerLink=\"/instancia/create\">\n    Adicionar instância\n</button>\n\n<app-instancia-filme-read></app-instancia-filme-read>\n","import { Component, OnInit } from '@angular/core';\nimport { HeaderService } from 'src/app/components/template/header/header.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private headerService: HeaderService) {\n    headerService.headerData = {\n      title: \"Início\",\n      icon: \"home\",\n      routeUrl: \"\"\n    }\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main\">\n    <mat-card class=\"main home purple-bg mat-elevation-z3\">\n        <mat-card-title class=\"title\">Bem vindo!</mat-card-title>\n        <mat-card-subtitle class=\"purple-bg subtitle\">\n            O que gostaria de fazer?\n        </mat-card-subtitle>\n    </mat-card>\n</div>\n<div class=\"cards\">\n    <mat-card class=\"card home filmes mat-elevation-z4\" routerLink=\"/filme\">\n        <mat-card-subtitle class=\"subtitle\">\n            <a class=\"child\" routerLink=\"/filme\">\n                <i class=\"material-icons\">movie</i> Filmes \n            </a>\n        </mat-card-subtitle>\n        <img mat-card-img src=\"../../../assets/img/popcorn.png\">\n        <mat-card-content class=\"child\">Ver todos os filmes da locadora</mat-card-content>\n    </mat-card>\n    <mat-card class=\"card home alugar mat-elevation-z4\" routerLink=\"/instancia\">\n        <mat-card-subtitle class=\"subtitle\">\n            <a class=\"child\" routerLink=\"/instancia\">\n                <i class=\"material-icons a\">local_movies</i>Filmes para alugar\n            </a>\n        </mat-card-subtitle>\n        <img mat-card-img src=\"../../../assets/img/locadora.jpg\">\n        <mat-card-content class=\"child\">Ver quais filmes estão disponíveis para alugar</mat-card-content>\n    </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Instancia } from '../instancia-filme.model';\nimport { InstanciaFilmeService } from '../instancia-filme.service';\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/pt';\nimport { Filme } from '../../filme/filme.model';\nimport { FilmeService } from '../../filme/filme.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-instancia-filme-update',\n  templateUrl: './instancia-filme-update.component.html',\n  styleUrls: ['./instancia-filme-update.component.css']\n})\nexport class InstanciaFilmeUpdateComponent implements OnInit {\n\n  filme_update: Filme;\n  filmes: Filme[];\n  instancia: Instancia;\n  startDate = new Date();\n\n  constructor(\n    private filmeService: FilmeService,\n    private instanciaService: InstanciaFilmeService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    registerLocaleData(localeFr, 'br');\n    const id = this.route.snapshot.paramMap.get('id');\n\n    this.filmeService.read().subscribe(filmes => {\n      this.filmes = filmes;\n    });\n\n    this.instanciaService.readById(id).subscribe(instancia => {\n      this.instancia = instancia;\n      this.filme_update = this.instancia.filme;\n      this.instancia.data_entrega = this.instanciaService.stringToDate(String(this.instancia.data_entrega));\n\n      // console.log(\"update: \", this.filme_update);\n      // console.log(\"date: \", this.instancia.data_entrega);\n      // console.log('update: ', this.instancia); \n      // console.log(typeof(this.instancia.data_entrega));\n      // console.log(typeof(this.instanciaService.stringToDate(String(this.instancia.data_entrega))));\n    });\n\n  }\n\n  updateInstanciaFilmeForm: FormGroup = this.formBuilder.group({\n    data_entrega: [, {\n      validators: [\n        Validators.required\n      ],\n      updateOn: \"change\"\n    }],\n    filme_select: [, {\n      validators: [\n        Validators.required\n      ],\n      updateOn: \"change\"\n    }],\n  });\n\n  updateInstancia() {\n    // console.log(\"final_date\", this.instancia.data_entrega);\n    this.instancia.filme = this.filme_update;\n    this.instanciaService.update(this.instancia).subscribe(() => {\n      this.instanciaService.showMessage('Instância alterada com sucesso!');\n      this.router.navigate(['/instancia']);\n    });\n  }\n \n  cancel(): void {\n    this.router.navigate(['/instancia']);\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Alterar instância</mat-card-title>\n\n    <form [formGroup]=\"updateInstanciaFilmeForm\" (submit)=\"updateInstancia()\">\n        <mat-form-field>\n            <!-- [ngModel]=\"instancia.data_entrega | date:'yyyy-MM-dd'\" (ngModelChange)=\"instancia.data_entrega=$event\" -->\n            <input \n                type=\"date\" placeholder=\"Data de entrega\" name=\"data_entrega\"                   \n                [(ngModel)]=\"instancia.data_entrega\"\n                matInput formControlName=\"data_entrega\"\n            > \n            <mat-error *ngIf=\"updateInstanciaFilmeForm.get('data_entrega').hasError('required')\">\n                Campo data de entrega é <strong>obrigatório</strong>\n            </mat-error>\n        </mat-form-field>\n        <!-- <mat-form-field>\n            <input matInput [matDatepicker]=\"picker\" placeholder=\"Pick a date\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>            \n        </mat-form-field> -->\n        <mat-form-field>\n            <mat-select [(ngModel)]=\"filme_update\" [(value)]=\"filme_update\" placeholder=\"Escolha um filme\" name=\"filme_select\" formControlName=\"filme_select\">\n                <mat-option *ngFor=\"let filme of filmes\" [value]=\"filme\">\n                    {{ filme.titulo }}\n                </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"updateInstanciaFilmeForm.get('filme_select').hasError('required')\">\n                Campo filme é <strong>obrigatório</strong>\n            </mat-error>\n        </mat-form-field>\n    </form>\n    <button type=\"submit\" mat-raised-button (click)=\"updateInstancia()\" color=\"primary\"\n    [disabled]=\"!updateInstanciaFilmeForm.valid\">\n        Alterar instância\n    </button>\n    <button mat-raised-button (click)=\"cancel()\">\n        Cancelar\n    </button>\n</mat-card>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Projeto Locadora :)';\n}\n","<app-header></app-header>\n<app-nav></app-nav>\n<!-- {{title}}<br> -->\n<!-- <app-filme></app-filme> -->\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Filme } from '../filme.model';\nimport { FilmeService } from '../filme.service';\n\n@Component({\n  selector: 'app-filme-desc',\n  templateUrl: './filme-desc.component.html',\n  styleUrls: ['./filme-desc.component.css']\n})\nexport class FilmeDescComponent implements OnInit {\n\n  filme: Filme;\n\n  constructor(\n    private filmeService: FilmeService, \n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    // this.dom(\"onInit\");\n    const id = this.route.snapshot.paramMap.get('id');\n    this.filmeService.readById(id).subscribe(filme => {\n      this.filme = filme;\n    });\n  }\n}\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>{{ filme.id }} - {{ filme.titulo }}</mat-card-title>\n        <mat-card-subtitle>\n            <div class=\"lista\" fxLayout=\"row\">\n                <div *ngFor=\"let genero of filme.genero\">\n                    {{ genero }} &nbsp;\n                </div>\n            </div>\n        </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <p>\n            {{ filme.sinopse }}\n        </p>\n        <strong>\n            <div class=\"lista\" fxLayout=\"row\">\n                <p>Diretor(es):&nbsp;</p>\n                <div *ngFor=\"let diretor of filme.diretores\">\n                    {{ diretor }} &nbsp;\n                </div>\n            </div>\n        </strong>\n        <strong>\n            <div class=\"lista\" fxLayout=\"row\">\n                <p>Ator(es):&nbsp;</p>\n                <div *ngFor=\"let ator of filme.atores\">\n                    {{ ator }} &nbsp;\n                </div>\n            </div>\n        </strong>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button color=\"primary\" routerLink=\"/filme\" mat-button>Voltar</button>\n    </mat-card-actions>\n</mat-card>","import { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { EMPTY, Observable } from 'rxjs';\nimport { Filme } from './filme.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilmeService {\n\n  baseUrl = 'http://localhost:8080/filmes';\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private http: HttpClient\n  ) { }\n\n  create(filme: Filme): Observable<Filme> {\n    return this.http.post<Filme>(this.baseUrl, filme).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  read(): Observable<Filme[]> {\n    return this.http.get<any[]>(this.baseUrl).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  readById(id: string): Observable<Filme> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.get<Filme>(url).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  update(filme: Filme): Observable<Filme> {\n    const url = `${this.baseUrl}/${filme.id}`;\n    return this.http.put<Filme>(url, filme).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  deleteById(filme: Filme): Observable<Filme> {\n    const url = `${this.baseUrl}/${filme.id}`;\n    return this.http.delete<Filme>(url).pipe(\n      map((obj) => obj),\n      catchError(e => this.errorHandler(e))\n    );\n  }\n\n  showMessage(msg: string, isError = false): void {\n    \n    this.snackBar.open(msg, \"Fechar\", {\n      duration: 3000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"top\",\n      panelClass: isError ? ['msg-error'] : ['msg-success']\n    });\n  }\n\n  errorHandler(e: any): Observable<any> {\n    console.log(e);\n    this.showMessage('Algo deu errado :\\\\', true);\n    return EMPTY;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { Filme } from '../filme.model';\nimport { FilmeService } from '../filme.service';\n\n@Component({\n  selector: 'app-filme-delete',\n  templateUrl: './filme-delete.component.html',\n  styleUrls: ['./filme-delete.component.css']\n})\nexport class FilmeDeleteComponent implements OnInit {\n\n  filme: Filme;\n\n  constructor(\n    private filmeService: FilmeService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.filmeService.readById(id).subscribe(filme => {\n      this.filme = filme;\n    });\n  }\n\n  deleteFilme(): void {\n    this.filmeService.deleteById(this.filme).subscribe(() => {\n      this.filmeService.showMessage('Filme deletado com sucesso!');\n      this.router.navigate(['/filme']);\n    });\n  }\n\n  avisoMsg(): void {\n    Swal.fire({\n      title: 'Tem certeza de que deseja remover esse filme?',\n      text: 'Você não poderá recuperá-lo.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Sim',\n      cancelButtonText: 'Não',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.deleteFilme();\n      } else if (result.isDismissed) {\n        this.cancel()\n      }\n    });\n  }\n\n  cancel(): void {\n    this.router.navigate(['/filme']);\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Remover filme</mat-card-title>\n    <form>\n        <mat-form-field>\n            <input matInput placeholder=\"Titulo\" [value]=\"filme.titulo\" name=\"titulo\" disabled>\n        </mat-form-field>\n\n        <mat-form-field>\n            <input matInput placeholder=\"Ano\" [value]=\"filme.ano\" name=\"ano\" disabled>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Sinopse\" [value]=\"filme.sinopse\" name=\"sinopse\" disabled>\n        </mat-form-field>\n    </form>\n    <button mat-raised-button (click)=\"avisoMsg()\" color=\"primary\">\n        Remover\n    </button>\n    \n    <button mat-raised-button (click)=\"cancel()\">\n        Cancelar\n    </button>\n</mat-card>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HeaderData } from '../footer/header-data.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n\n  private _headerData = new BehaviorSubject<HeaderData>({\n    title: 'Início',\n    icon: 'home',\n    routeUrl: ''\n  });\n\n  constructor() { }\n\n  get headerData(): HeaderData {\n    return this._headerData.value;\n  }\n\n  set headerData(headerData: HeaderData) {\n    this._headerData.next(headerData);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { HeaderComponent } from './components/template/header/header.component';\nimport { NavComponent } from './components/template/nav/nav.component';\nimport { FooterComponent } from './components/template/footer/footer.component';\nimport { HomeComponent } from './views/home/home.component';\n\nimport { FilmeCrudComponent } from './views/filme-crud/filme-crud.component';\nimport { FilmeCreateComponent } from './components/filme/filme-create/filme-create.component';\nimport { FilmeReadComponent } from './components/filme/filme-read/filme-read.component';\nimport { FilmeUpdateComponent } from './components/filme/filme-update/filme-update.component';\nimport { FilmeDeleteComponent } from './components/filme/filme-delete/filme-delete.component';\nimport { FilmeDescComponent } from './components/filme/filme-desc/filme-desc.component';\n\nimport { InstanciaFilmeCrudComponent } from './views/instancia-filme-crud/instancia-filme-crud.component';\nimport { InstanciaFilmeReadComponent } from './components/instancia-filme/instancia-filme-read/instancia-filme-read.component';\nimport { InstanciaFilmeCreateComponent } from './components/instancia-filme/instancia-filme-create/instancia-filme-create.component';\nimport { InstanciaFilmeUpdateComponent } from './components/instancia-filme/instancia-filme-update/instancia-filme-update.component';\nimport { InstanciaFilmeDeleteComponent } from './components/instancia-filme/instancia-filme-delete/instancia-filme-delete.component';\nimport { InstanciaFilmeReadDetailComponent } from './components/instancia-filme/instancia-filme-read-detail/instancia-filme-read-detail.component';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatDatepickerModule } from '@angular/material/datepicker'; \nimport { MatNativeDateModule } from '@angular/material/core'; \nimport { MatSelectModule } from '@angular/material/select';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n    HomeComponent,\n    FilmeCrudComponent,\n    FilmeCreateComponent,\n    FilmeReadComponent,\n    FilmeUpdateComponent,\n    FilmeDeleteComponent,\n    FilmeDescComponent,\n    InstanciaFilmeCrudComponent,\n    InstanciaFilmeReadComponent,\n    InstanciaFilmeCreateComponent,\n    InstanciaFilmeUpdateComponent,\n    InstanciaFilmeDeleteComponent,\n    InstanciaFilmeReadDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    AppRoutingModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    HttpClientModule, \n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    ReactiveFormsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSelectModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FilmeService } from '../filme.service';\nimport { Filme } from '../filme.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-filme-update',\n  templateUrl: './filme-update.component.html',\n  styleUrls: ['./filme-update.component.css']\n})\nexport class FilmeUpdateComponent implements OnInit {\n\n  filme: Filme;\n\n  generos: string[] = [\n    \"Ação\",\n    \"Aventura\",\n    \"Drama\",\n    \"Fantasia\",\n    \"Ficção científica\"\n  ];\n\n  constructor(\n    private filmeService: FilmeService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.filmeService.readById(id).subscribe(filme => {\n      this.filme = filme;\n      // console.log('update: ', this.filme);\n      //this.markCheckBox();\n    });\n  }\n\n  updateFilme(): void {\n    this.convertGenero();\n    this.filmeService.update(this.filme).subscribe(() => {\n      this.filmeService.showMessage('Filme alterado com sucesso!');\n      this.router.navigate(['/filme']);\n    });\n  }\n\n  convertGenero(): void {\n    for (let i = 0; i < this.filme.genero.length; i++) {\n      if (!this.filme.genero[i]) {\n        this.filme.genero[i] = null;\n      } else {\n        this.filme.genero[i] = this.generos[i];\n      }\n    }\n  }\n\n  cancel(): void {\n    this.router.navigate(['/filme'])\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Alterar filme</mat-card-title>\n    <form>\n        <mat-form-field>\n            <input matInput placeholder=\"Titulo\" [(ngModel)]=\"filme.titulo\" name=\"titulo\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Ano\" [(ngModel)]=\"filme.ano\" name=\"ano\">\n        </mat-form-field>\n        <div class=\"row\">\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 1\" name=\"diretor1\" matInput [(ngModel)]=\"filme.diretores[0]\">\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 2\" name=\"diretor2\" matInput [(ngModel)]=\"filme.diretores[1]\">\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 3\" name=\"diretor3\" matInput [(ngModel)]=\"filme.diretores[2]\">\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 4\" name=\"diretor4\" matInput [(ngModel)]=\"filme.diretores[3]\">\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 5\" name=\"diretor5\" matInput [(ngModel)]=\"filme.diretores[4]\">\n            </mat-form-field>\n        </div>\n        <div class=\"row\">\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 1\" [(ngModel)]=\"filme.atores[0]\" name=\"ator1\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 2\" [(ngModel)]=\"filme.atores[1]\" name=\"ator2\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 3\" [(ngModel)]=\"filme.atores[2]\" name=\"ator3\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 4\" [(ngModel)]=\"filme.atores[3]\" name=\"ator4\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 5\" [(ngModel)]=\"filme.atores[4]\" name=\"ator5\">\n            </mat-form-field>\n        </div>\n        <div class=\"genero\">\n            <mat-list-item>\n                <mat-checkbox [(ngModel)]=\"filme.genero[0]\" name=\"genero1\">{{ generos[0] }}</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[1]\" name=\"genero2\">{{ generos[1] }}</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[2]\" name=\"genero3\">{{ generos[2] }}</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[3]\" name=\"genero4\">{{ generos[3] }}</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[4]\" name=\"genero5\">{{ generos[4] }}</mat-checkbox>\n            </mat-list-item>\n        </div>\n        <mat-form-field>\n            <input matInput placeholder=\"Sinopse\" [(ngModel)]=\"filme.sinopse\" name=\"sinopse\">\n        </mat-form-field>\n    </form>\n</mat-card>\n<br>\n<button mat-raised-button (click)=\"updateFilme()\" color=\"primary\">\n    Alterar\n</button>\n\n<button mat-raised-button (click)=\"cancel()\">\n    Cancelar\n</button>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Instancia } from '../instancia-filme.model';\nimport { InstanciaFilmeService } from '../instancia-filme.service';\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/pt';\n\n@Component({\n  selector: 'app-instancia-filme-read-detail',\n  templateUrl: './instancia-filme-read-detail.component.html',\n  styleUrls: ['./instancia-filme-read-detail.component.css']\n})\nexport class InstanciaFilmeReadDetailComponent implements OnInit {\n\n  instancia: Instancia;\n\n  constructor(\n    private instanciaService: InstanciaFilmeService, \n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    registerLocaleData(localeFr, 'br');\n    const id = this.route.snapshot.paramMap.get('id');\n    this.instanciaService.readById(id).subscribe(instancia => {\n      this.instancia = instancia;\n    });\n  }\n\n}\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>Instância - {{ instancia.id }}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <p>\n            Data de entrega: {{ instancia.data_entrega | date: 'longDate':'UTC':'br' }}\n        </p>\n    </mat-card-content>\n    <mat-card-content>\n        <p>\n            Filme: {{ instancia.filme.titulo }}\n        </p>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button color=\"primary\" routerLink=\"/instancia\" mat-button>Voltar</button>\n    </mat-card-actions>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  opened = false;\n  btnText: string = \"navigate_next\";\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggleNav() {\n    this.opened = !this.opened;\n    // console.log(this.opened);\n    this.btnText = \n      this.btnText == 'navigate_next' \n        ? 'navigate_before' \n        : 'navigate_next';\n  }\n\n}\n","<mat-sidenav-container class=\"container\">\n    <mat-sidenav class=\"sidenav\" mode=\"side\" [(opened)]=\"opened\" \n    fixedInViewport=\"true\" fixedTopGap=\"64\">\n        <mat-nav-list class=\"nav-list\">\n            <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">home</i>\n                Início\n            </a>\n            <a mat-list-item routerLink=\"/filme\">\n                <i class=\"material-icons\">movie</i>\n                Filmes\n            </a>\n            <a mat-list-item routerLink=\"/instancia\">\n                <i class=\"material-icons\">local_movies</i>\n                Alugar\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"content\">\n        <button mat-raised-button color=\"primary\" (click)=\"toggleNav()\">\n            <i class=\"material-icons\">{{ btnText }}</i>\n            <!-- Navegar -->\n        </button>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Filme } from '../filme.model';\nimport { FilmeService } from '../filme.service';\n\n@Component({\n  selector: 'app-filme-create',\n  templateUrl: './filme-create.component.html',\n  styleUrls: ['./filme-create.component.css']\n})\nexport class FilmeCreateComponent implements OnInit {\n\n  generos: string[] = [\n    \"Ação\",\n    \"Aventura\",\n    \"Drama\",\n    \"Ficção científica\",\n    \"Fantasia\"\n  ];\n\n  filme: Filme = {\n    ano: null,\n    titulo: '',\n    diretores: [],\n    atores: [],\n    genero: [],\n    sinopse: '',\n  }\n\n  constructor(\n    private filmeService: FilmeService,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  createFilmeForm: FormGroup = this.formBuilder.group({\n    ano: [, {\n      validators: [\n        Validators.pattern(\"^(19[0-9][0-9]|20[01][0-9]|2020)$\"), Validators.required\n      ],\n      updateOn: \"change\"\n    }],\n    titulo: [, {\n      validators: [\n        Validators.required, Validators.minLength(2), Validators.maxLength(30)\n      ], updateOn: \"change\"\n    }],\n    diretores: [, {\n      validators: [\n        Validators.required\n      ], updateOn: \"change\"\n    }],\n    atores: [, {\n      validators: [\n        Validators.required\n      ], updateOn: \"change\"\n    }],\n    sinopse: [, {\n      validators: [\n        Validators.required, Validators.minLength(5), Validators.maxLength(500)\n      ], updateOn: \"change\"\n    }],\n    noValidation: [, { updateOn: \"change\" }]\n  });\n\n  createFilme(): void {\n    // console.log(\"antes: \", this.filme.genero);\n    this.convertGenero();\n    this.filmeService.create(this.filme).subscribe(() => {\n      this.filmeService.showMessage('Filme criado com sucesso!');\n      this.router.navigate(['/filme']);\n    });\n  }\n\n  cancel(): void {\n    this.router.navigate(['/filme']);\n  }\n\n  convertGenero(): void {\n    console.log(this.filme);\n    for (let i = 0; i < this.filme.genero.length; i++) {\n      if (!this.filme.genero[i]) {\n        this.filme.genero[i] = null;\n      } else {\n        this.filme.genero[i] = this.generos[i];\n      }\n    }\n  }\n}\n","<mat-card>\n    <mat-card-title>Novo filme</mat-card-title>\n    <form [formGroup]=\"createFilmeForm\" (submit)=\"createFilme()\">\n        <mat-form-field>\n            <input matInput placeholder=\"Titulo\" [(ngModel)]=\"filme.titulo\" name=\"titulo\" formControlName=\"titulo\">\n            <mat-error *ngIf=\"createFilmeForm.get('titulo').hasError('required')\">\n                Campo título é <strong>obrigatório</strong>\n            </mat-error>\n            <mat-error *ngIf=\"createFilmeForm.get('titulo').hasError('minLength')\">\n                Título precisa ter mais de dois caracteres\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Ano\" [(ngModel)]=\"filme.ano\" name=\"ano\" formControlName=\"ano\">\n            <mat-error *ngIf=\"createFilmeForm.get('ano').hasError('required')\">\n                Campo ano é <strong>obrigatório</strong>\n            </mat-error>\n            <mat-error *ngIf=\"createFilmeForm.get('ano').hasError('pattern')\">\n                Ano inválido\n            </mat-error>\n        </mat-form-field>\n        <div class=\"row\">\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 1\" name=\"diretor\" formControlName=\"diretores\" matInput\n                    [(ngModel)]=\"filme.diretores[0]\">\n                <mat-error *ngIf=\"createFilmeForm.get('diretores').hasError('required')\">\n                    Campo diretor é <strong>obrigatório</strong>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 2\" name=\"diretor\" formControlName=\"noValidation\" matInput\n                    [(ngModel)]=\"filme.diretores[1]\">\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 3\" name=\"diretor\" formControlName=\"noValidation\" matInput\n                    [(ngModel)]=\"filme.diretores[2]\">\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 4\" name=\"diretor\" formControlName=\"noValidation\" matInput\n                    [(ngModel)]=\"filme.diretores[3]\">\n            </mat-form-field>\n            <mat-form-field class=\"diretores\">\n                <input placeholder=\"Diretor 5\" name=\"diretor\" formControlName=\"noValidation\" matInput\n                    [(ngModel)]=\"filme.diretores[4]\">\n            </mat-form-field>\n        </div>\n        <div class=\"row\">\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 1\" [(ngModel)]=\"filme.atores[0]\" formControlName=\"atores\"\n                    name=\"atores\">\n                <mat-error *ngIf=\"createFilmeForm.get('atores').hasError('required')\">\n                    Campo ator é <strong>obrigatório</strong>\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 2\" name=\"atores\" formControlName=\"noValidation\"\n                    [(ngModel)]=\"filme.atores[1]\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 3\" name=\"atores\" formControlName=\"noValidation\"\n                    [(ngModel)]=\"filme.atores[2]\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 4\" name=\"atores\" formControlName=\"noValidation\"\n                    [(ngModel)]=\"filme.atores[3]\">\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Ator 5\" name=\"atores\" formControlName=\"noValidation\"\n                    [(ngModel)]=\"filme.atores[4]\">\n            </mat-form-field>\n        </div>\n        <div class=\"genero\">\n            <mat-list-item>\n                <mat-checkbox [(ngModel)]=\"filme.genero[0]\" name=\"genero1\" formControlName=\"noValidation\">Ação</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[1]\" name=\"genero2\" formControlName=\"noValidation\">Aventura</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[2]\" name=\"genero3\" formControlName=\"noValidation\">Drama</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[3]\" name=\"genero4\" formControlName=\"noValidation\">Ficção científica</mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"filme.genero[4]\" name=\"genero5\" formControlName=\"noValidation\">Fantasia</mat-checkbox>\n            </mat-list-item>\n        </div>  \n        <mat-form-field>\n            <input matInput placeholder=\"Sinopse\" [(ngModel)]=\"filme.sinopse\" name=\"sinopse\" formControlName=\"sinopse\">\n            <mat-error *ngIf=\"createFilmeForm.get('sinopse').hasError('required')\">\n                Campo sinopse é <strong>obrigatório</strong>\n            </mat-error>\n        </mat-form-field>\n    </form>\n</mat-card>\n<button type=\"submit\" mat-raised-button (click)=\"createFilme()\" color=\"primary\" [disabled]=\"!createFilmeForm.valid\">\n    Criar Filme\n</button>\n<button mat-raised-button (click)=\"cancel()\">\n    Cancelar\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { HeaderService } from './header.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n    private headerService: HeaderService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  get title(): string {\n    return this.headerService.headerData.title;\n  }\n\n  get icon(): string {\n    return this.headerService.headerData.icon;\n  }\n  \n  get routeUrl(): string {\n    return this.headerService.headerData.routeUrl;\n  }\n}\n","<mat-toolbar class=\"header mat-elevation-z4\">\n    <span>\n        <a routerLink=\"/\">\n            <img class=\"logo\" src=\"assets/img/movie.png\" alt=\"logo\">\n        </a>\n    </span>\n    <span class=\"title-group\">\n        <a routerLink=\"{{ routeUrl }}\">\n            <i class=\"material-icons\">{{ icon }}</i><span>{{ title }}</span>\n        </a>\n    </span>\n</mat-toolbar>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule  } from '@angular/router';\n\nimport { HomeComponent } from './views/home/home.component';\nimport { FilmeCrudComponent  } from './views/filme-crud/filme-crud.component';\nimport { FilmeCreateComponent } from './components/filme/filme-create/filme-create.component';\nimport { FilmeUpdateComponent } from './components/filme/filme-update/filme-update.component';\nimport { FilmeDeleteComponent } from './components/filme/filme-delete/filme-delete.component';\nimport { FilmeDescComponent } from './components/filme/filme-desc/filme-desc.component';\nimport { InstanciaFilmeCrudComponent } from './views/instancia-filme-crud/instancia-filme-crud.component';\nimport { InstanciaFilmeCreateComponent } from './components/instancia-filme/instancia-filme-create/instancia-filme-create.component';\nimport { InstanciaFilmeUpdateComponent } from './components/instancia-filme/instancia-filme-update/instancia-filme-update.component';\nimport { InstanciaFilmeDeleteComponent } from './components/instancia-filme/instancia-filme-delete/instancia-filme-delete.component';\nimport { InstanciaFilmeReadDetailComponent } from './components/instancia-filme/instancia-filme-read-detail/instancia-filme-read-detail.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent\n  },\n  {\n    path: \"filme\",\n    component: FilmeCrudComponent\n  },\n  {\n    path: \"filme/create\",\n    component: FilmeCreateComponent\n  },\n  {\n    path: \"filme/update/:id\",\n    component: FilmeUpdateComponent\n  },\n  {\n    path: \"filme/delete/:id\",\n    component: FilmeDeleteComponent\n  },\n  {\n    path: \"filme/read/:id\",\n    component: FilmeDescComponent\n  },\n  {\n    path: \"instancia\",\n    component: InstanciaFilmeCrudComponent\n  },\n  {\n    path: \"instancia/create\",\n    component: InstanciaFilmeCreateComponent\n  },\n  {\n    path: \"instancia/update/:id\",\n    component: InstanciaFilmeUpdateComponent\n  },\n  {\n    path: \"instancia/delete/:id\",\n    component: InstanciaFilmeDeleteComponent\n  },\n  {\n    path: \"instancia/read/:id\",\n    component: InstanciaFilmeReadDetailComponent\n  }\n  \n]\n\n@NgModule({\n  imports:  [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { AfterViewChecked, AfterViewInit, Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { HeaderService } from '../../template/header/header.service';\nimport { Filme } from '../filme.model';\nimport { FilmeService } from '../filme.service';\n\ndeclare let name: any;\n\n@Component({\n  selector: 'app-filme-read',\n  templateUrl: './filme-read.component.html',\n  styleUrls: ['./filme-read.component.css'],\n})\nexport class FilmeReadComponent implements OnInit, AfterViewChecked {\n\n  filmes: Filme[];\n  generosRow: ElementRef;\n\n  displayedColumns = ['id', 'titulo', 'generos', 'ano', 'action'];\n\n  i: number = 1;\n  cond: boolean = true;\n  constructor(\n    private filmeService: FilmeService,\n    private elRef: ElementRef\n  ) { }\n\n  ngAfterViewChecked(): void {\n    if (this.cond) {\n      this.generosRow = this.elRef.nativeElement.querySelectorAll(\"td.row-genero\");\n      // console.log(\"generosRow: \", this.generosRow);\n      this.formatGenero();\n      this.i++;\n      this.cond = false;\n    }\n  }\n\n  ngOnInit(): void {\n    // this.dom(\"onInit\");\n    this.filmeService.read().subscribe(filmes => {\n      this.filmes = filmes;\n      // console.log(\"filmes:\", this.filmes);\n    });\n  }\n\n  formatGenero() {\n    // this.generosRow.forEach(element => {\n    // });\n    for (let i = 0; i < this.filmes.length; i++) {\n      this.generosRow[i].textContent = this.generosRow[i].textContent.replace(/\\,,,,/g, \", \");\n      this.generosRow[i].textContent = this.generosRow[i].textContent.replace(/\\,,,,/g, \"\");\n      this.generosRow[i].textContent = this.generosRow[i].textContent.replace(/\\,,,/g, \", \");\n      this.generosRow[i].textContent = this.generosRow[i].textContent.replace(/\\,,,/g, \"\");\n      this.generosRow[i].textContent = this.generosRow[i].textContent.replace(/\\,,/g, \", \");\n      this.generosRow[i].textContent = this.generosRow[i].textContent.replace(/\\,,/g, \"\");\n      this.generosRow[i].textContent = this.generosRow[i].textContent.replace(/\\,/g, \", \");\n      if (this.generosRow[i].textContent[0] === \",\") {\n        // console.log(this.generosRow[i].textContent);\n        this.generosRow[i].textContent = this.generosRow[i].textContent.slice(1, this.generosRow[i].textContent.length);\n      }\n      if (this.generosRow[i].textContent[this.generosRow[i].textContent.length - 1] === \",\") {\n        this.generosRow[i].textContent = this.generosRow[i].textContent.slice(0, this.generosRow[i].textContent.length - 1);\n      }\n    }\n  }\n\n  // dom(str: string) {\n  //   //querySelector(\".mat-cell.cdk-cell.cdk-column-generos.mat-column-generos.ng-star-inserted\");\n  //   console.log(`filme-read: (${str})`, generosRow);\n  // }\n\n}\n","<div class=\"mat-elevation-z4\">\n    <table matSort mat-table [dataSource]=\"filmes\">\n        <!-- *ngIf=\"filmes.length !== 0; else elseBlock\" -->\n        <!-- Id Column -->\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n            <td mat-cell *matCellDef=\"let row\"><a routerLink=\"/filme/read/{{ row.id }}\">{{ row.id }}</a></td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"titulo\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Titulo</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.titulo }}</td>\n        </ng-container>\n\n        <!-- {{ row.genero[0] }}, {{ row.genero[1] }} -->\n        <ng-container matColumnDef=\"generos\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Genêros</th>\n            <td class=\"row-genero\" mat-cell *matCellDef=\"let row\">{{ row.genero }}</td> \n        </ng-container>\n        \n        <!-- <app-filme-read-genero></app-filme-read-genero> -->\n\n        <ng-container matColumnDef=\"ano\"> \n            <th mat-header-cell *matHeaderCellDef>Ano</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.ano }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef>Ação</th>\n            <td mat-cell *matCellDef=\"let row\">\n                <a routerLink=\"/filme/update/{{ row.id }}\" class=\"edit\">\n                    <i class=\"material-icons\">edit</i>\n                </a>\n                <a routerLink=\"/filme/delete/{{ row.id }}\" class=\"delete\">\n                    <i class=\"material-icons\">delete</i>\n                </a>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}